<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蔓羊</title>
  
  <subtitle>梦想还是要有的，万一见鬼了呢</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-27T03:51:28.987Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yagmdream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>无插件上拉加载</title>
    <link href="http://yoursite.com/2019/03/27/%E6%97%A0%E6%8F%92%E4%BB%B6%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/03/27/无插件上拉加载/</id>
    <published>2019-03-27T02:19:27.000Z</published>
    <updated>2019-03-27T03:51:28.987Z</updated>
    
    <content type="html"><![CDATA[<p>在写这篇文档之前，自己也写过移动端的上拉加载，不过一直以来都是用插件。<br>这次有时间吧原理好好梳理下；</p><h3 id="原理："><a class="header-anchor" href="#原理：">¶</a>原理：</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190327103242.jpg" alt="提示图片"></p><p><strong>浏览器内容高度(随内容多少变化)：</strong> document.documentelement.scrollHeight(ie的scrollHeight为document.body.scrollHeight)<br><strong>滚动条的高度：</strong> dooument.documentelement.scrollTop(ie的scrollTop为document.body.scrollTop)<br><strong>设备网页的可见高度(很多人说是设备的高度，自己斟酌)：</strong> widnow.screen.height</p><p>所以，当document.documentelement.scrollHeight = dooument.documentelement.scrollTop + widnow.screen.height时，就是滑到底部，需要请求下一页数据的时候</p><p>下面是核心代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> screenHeight = <span class="built_in">window</span>.screen.height;</span><br><span class="line"><span class="keyword">var</span> scrollHeight = <span class="built_in">document</span>.documentElement.scrollHeight;</span><br><span class="line"><span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下面的10是在滑动在距离底部10px的时候,触发下一页数据请求.可自行调节</span></span><br><span class="line"><span class="keyword">if</span>(scrollHeight - (screenHeight + scrollTop) &lt; <span class="number">10</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面就是请求下一页数据的逻辑了，自行发挥</span></span><br><span class="line"> <span class="keyword">var</span> htmlt = <span class="string">''</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line"> htmlt = htmlt + <span class="string">'&lt;p&gt;'</span> + arr[i] + <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> box = $(<span class="string">'.box'</span>).html()</span><br><span class="line"> $(<span class="string">'.box'</span>).html(box + htmlt);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好用的话记得star呀~~😛<br>[上拉滚动 demo git地址]<a href="https://github.com/yagmdream/scroll" target="_blank" rel="noopener">https://github.com/yagmdream/scroll</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在写这篇文档之前，自己也写过移动端的上拉加载，不过一直以来都是用插件。&lt;br&gt;
这次有时间吧原理好好梳理下；&lt;/p&gt;
&lt;h3 id=&quot;原理：&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#原理：&quot;&gt;¶&lt;/a&gt;原理：&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo搭建博客基础教程</title>
    <link href="http://yoursite.com/2019/03/21/%E5%85%A5%E9%97%A8%E7%BA%A7github-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/03/21/入门级github-hexo搭建博客教程/</id>
    <published>2019-03-21T08:55:01.000Z</published>
    <updated>2019-03-22T09:47:04.708Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备：1-安装node-js环境并配置好"><a class="header-anchor" href="#准备：1-安装node-js环境并配置好">¶</a>准备：1.安装node.js环境并配置好</h3><p>配置好之后，window + R 打开运行窗口，输入如下命令。出现版本号则说明安装成功<br><img src="/images/aimg/X8EGWAL%5DP36%25_FX67%25RR14N.png" alt="提示图片"><br> </p><h3 id="2-github注册并新建一个仓库-仓库名必须和用户名相同-格式遵守：用户名-github-io"><a class="header-anchor" href="#2-github注册并新建一个仓库-仓库名必须和用户名相同-格式遵守：用户名-github-io">¶</a>2.github注册并新建一个仓库，仓库名<strong>必须</strong>和用户名相同，格式遵守：<a href="http://xn--eqr924avxo.github.io" target="_blank" rel="noopener">用户名.github.io</a></h3><p><img src="/images/aimg/E2DBKLD83MNS$%60YR7J3CVHM.png" alt="提示图片"><br>点击确定，仓库就建好了。<br> </p><h3 id="3-在仓库上面最右边的菜单点击setting"><a class="header-anchor" href="#3-在仓库上面最右边的菜单点击setting">¶</a>3.在仓库上面最右边的菜单点击setting</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190321174232.png" alt="提示图片"><br>然后向下拉到Github Pages,圈出的地方会有个网址（ps: 我这个是做了自定义域名），打开那个网址。你会发现项目在网络上可以打开了<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190321174527.png" alt="提示图片"><br> </p><h3 id="4-下来我们开始搭建安装hexo"><a class="header-anchor" href="#4-下来我们开始搭建安装hexo">¶</a>4.下来我们开始搭建安装Hexo</h3><p>新建一个文件夹，进入文件夹，右键点击Git Bash Here打开命令行工具<br>输入命令, 开始全局安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190321181657.png" alt="提示图片"><br>安装完成之后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>出现下图，则安装成功<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190321182834.png" alt="提示图片"><br> </p><h3 id="5-输入hexo-init进行项目初始化"><a class="header-anchor" href="#5-输入hexo-init进行项目初始化">¶</a>5.输入hexo init进行项目初始化</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322120238.png" alt="提示图片"><br>出现下图 ，则说明项目初始化成功<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322120323.png" alt="提示图片"><br> </p><h3 id="6-然后输入npm-install安装所需的组件"><a class="header-anchor" href="#6-然后输入npm-install安装所需的组件">¶</a>6.然后输入npm install安装所需的组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p> </p><h3 id="7-安装完成-就可以查看我们本地的博客了-输入："><a class="header-anchor" href="#7-安装完成-就可以查看我们本地的博客了-输入：">¶</a>7.安装完成，就可以查看我们本地的博客了，输入：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开圈出的地址：就能查看我们的博客雏形了😄<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322121118.png" alt="提示图片"><br>打开后正常应该是下面酱紫滴😝<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322121442.png" alt="提示图片"></p><p> </p><h2 id="下来我们将博客放在我们github网址能访问的地方"><a class="header-anchor" href="#下来我们将博客放在我们github网址能访问的地方">¶</a>下来我们将博客放在我们github网址能访问的地方</h2><h3 id="添加ssh-ps-这个是为了我们方便的将文章发布上去-如果之前有添加过ssh-则略过"><a class="header-anchor" href="#添加ssh-ps-这个是为了我们方便的将文章发布上去-如果之前有添加过ssh-则略过">¶</a>添加ssh(ps:这个是为了我们方便的将文章发布上去)，如果之前有添加过ssh，则略过</h3><figure class="highlight plain"><figcaption><span>进入ssh文件夹</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cs ~/.ssh</span><br></pre></td></tr></table></figure><p> </p><h3 id="输入ls-查看是否有id-rsa-id-rsa-pub-这两个文件夹"><a class="header-anchor" href="#输入ls-查看是否有id-rsa-id-rsa-pub-这两个文件夹">¶</a>输入ls 查看是否有id_rsa，id_rsa.pub 这两个文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p> </p><h3 id="如果没有-就输入下面的命令-然后回车-过程中会要求你输入github的账号和密码"><a class="header-anchor" href="#如果没有-就输入下面的命令-然后回车-过程中会要求你输入github的账号和密码">¶</a>如果没有，就输入下面的命令，然后回车。过程中会要求你输入github的账号和密码。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github邮箱&quot;</span><br></pre></td></tr></table></figure><p> </p><h3 id="输入完成之后-查看你的"><a class="header-anchor" href="#输入完成之后-查看你的">¶</a>输入完成之后。查看你的</h3><p>C:\Users\hasee.ssh (ps:我的是这个) 大部分人应该是这个 C:\Users\window.ssh 文件件下面找到id_rsa.pub文件。<br>打开并复制里面的全部内容。然后登陆你的github,点击头像,选择settings<br><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322150905.png" alt="提示图片"><br> </p><h3 id="选择左侧边栏的ssh-and-gpg-keys-点击new-ssh-keys"><a class="header-anchor" href="#选择左侧边栏的ssh-and-gpg-keys-点击new-ssh-keys">¶</a>选择左侧边栏的SSH and GPG keys,点击New SSH keys</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322151217.png" alt="提示图片"><br> </p><h3 id="添加完成之后-输入下面的命令-看看是否添加成功"><a class="header-anchor" href="#添加完成之后-输入下面的命令-看看是否添加成功">¶</a>添加完成之后，输入下面的命令。看看是否添加成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p> </p><h3 id="出现下面的提示-说明已经添加成功"><a class="header-anchor" href="#出现下面的提示-说明已经添加成功">¶</a>出现下面的提示，说明已经添加成功</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322153218.png" alt="提示图片"><br> </p><h3 id="部署设置-在项目的根目录下找到-config-yml-文件-打开-拉到最下面-修改repository为你github博客的ssh"><a class="header-anchor" href="#部署设置-在项目的根目录下找到-config-yml-文件-打开-拉到最下面-修改repository为你github博客的ssh">¶</a>部署设置，在项目的根目录下找到_config.yml 文件，打开，拉到最下面，修改repository为你github博客的ssh</h3><p><img src="/images/aimg/TIM%E5%9B%BE%E7%89%8720190322155642.png" alt="提示图片"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yagmdream/yagmdream.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p> </p><h3 id="现在可以准备部署文章了-安装部署插件"><a class="header-anchor" href="#现在可以准备部署文章了-安装部署插件">¶</a>现在可以准备部署文章了，安装部署插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p> </p><h3 id="安装完成之后-输入hexo-d-g-生成及部署文章"><a class="header-anchor" href="#安装完成之后-输入hexo-d-g-生成及部署文章">¶</a>安装完成之后，输入hexo d -g  生成及部署文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>现在可以线上访问： 用户名.github.io的地址 查看博客了😄</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备：1-安装node-js环境并配置好&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#准备：1-安装node-js环境并配置好&quot;&gt;¶&lt;/a&gt;准备：1.安装node.js环境并配置好&lt;/h3&gt;
&lt;p&gt;配置好之后，window + R 打开运行窗
      
    
    </summary>
    
    
      <category term="分享" scheme="http://yoursite.com/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>mint-ui的cdn使用</title>
    <link href="http://yoursite.com/2019/03/20/mint-ui%E7%9A%84cdn%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/03/20/mint-ui的cdn使用/</id>
    <published>2019-03-20T10:17:25.000Z</published>
    <updated>2019-03-20T10:17:55.861Z</updated>
    
    <content type="html"><![CDATA[<p><strong>mint-ui</strong>平时使用多的经常是在类似 vue-cli 搭建好的框架中用import 引入，那如果我们cdn直接引入 <strong>script</strong> 。那里面的消息框该怎么用呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/Public/app_car_sales/css_v1_1/mint.ui.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/Public/app_car_sales/js_v1_1/mint.ui.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>toast、message调用看下面：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 new Vue 对象的方法中直接调用就可以了</span></span><br><span class="line"><span class="keyword">this</span>.$toast(<span class="string">'这是一个提示窗'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//message同理（全拼全部小写）</span></span><br><span class="line"><span class="keyword">this</span>.$messagebox(&#123;</span><br><span class="line">     title: <span class="string">'提示'</span>,</span><br><span class="line">     message: <span class="string">'这是一个有确定按钮的弹窗'</span>,</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;mint-ui&lt;/strong&gt;平时使用多的经常是在类似 vue-cli 搭建好的框架中用import 引入，那如果我们cdn直接引入 &lt;strong&gt;script&lt;/strong&gt; 。那里面的消息框该怎么用呢？&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
      <category term="mint-ui" scheme="http://yoursite.com/tags/mint-ui/"/>
    
  </entry>
  
  <entry>
    <title>react-super理解</title>
    <link href="http://yoursite.com/2019/03/20/react-super%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/03/20/react-super理解/</id>
    <published>2019-03-20T10:15:41.000Z</published>
    <updated>2019-03-20T10:38:10.505Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看react的文档，发现react的逻辑都是以component为基础的。<br>比如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在es6中class的继承是通过extends关键字实现的。constructor 是类默认的构造方法。那么<strong>super</strong>是做什么用的？<br> </p><h3 id="1-有super-or-无super"><a class="header-anchor" href="#1-有super-or-无super">¶</a>1.有super() or 无super()</h3><hr><p>我们现在注释掉super(props)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="comment">//super(props);</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/aimg/2019022016090287.png" alt="提示图片"><br>提示this不存在，就是说super是子类为了继承父类的this。<br><strong>子类是没有自己的this的，它只能继承父类的this对象，然后对其操作。而super就是将父类的this继承给子类的。没有super，子类是无法拿到this对象的。</strong></p><p>所以我们这样写 super()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印出this为：<br><img src="/images/aimg/2019022016190517.png" alt="结果"><br> </p><h3 id="2-super-props-or-super"><a class="header-anchor" href="#2-super-props-or-super">¶</a>2.super(props) or super()</h3><hr><p>现在我们打印下 <strong>this.props</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.props);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/aimg/2019022016282444.png" alt="this.props"><br>现在是可以正常打印出结果的，现在将super中的props删掉</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.props);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/aimg/20190220163402157.png" alt="/images/aimg/20190220163402157.png"><br>也就是说，如果我们想在constructor中使用props，super中就必须要带参数。否则是无法拿到值的。</p><p>所以还是建议，不论constructor中是否用到props ， 都这样写super(props); 这样不论什么情况都不会有拿不到值或者报错的情况</p><p>先写到这吧，要是有别的认知再来补充😝😝~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在看react的文档，发现react的逻辑都是以component为基础的。&lt;br&gt;
比如：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>react初识</title>
    <link href="http://yoursite.com/2019/02/20/react%E5%88%9D%E8%AF%86/"/>
    <id>http://yoursite.com/2019/02/20/react初识/</id>
    <published>2019-02-20T04:25:48.000Z</published>
    <updated>2019-03-21T04:38:26.637Z</updated>
    
    <content type="html"><![CDATA[<p>新年伊始，领导说后面相面考虑用react开发，最近看了react的文档。真心话，觉得好复杂。个人想法ps: 也可能是因为之前用的vue，一时半会转不过来的原因 。希望不会有人打我😂</p><hr><h6 id="话不多说-我们先来感受下"><a class="header-anchor" href="#话不多说-我们先来感受下">¶</a>话不多说 我们先来感受下</h6><p>注意：react对node版本有要求:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Node &gt;= 6 and npm &gt;= 5.2</span><br></pre></td></tr></table></figure><p>首先先<strong>全局</strong>安装create-react-app这个脚手架， 为了后续执行命令用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g create-react-app</span><br></pre></td></tr></table></figure><p>然后开始创建我们的第一个react项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create-react-app myapp   //myapp是项目名</span><br></pre></td></tr></table></figure><p>创建完成之后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd myapp   //进入项目</span><br><span class="line">yarn start   //运行  用npm start 也可以，个人习惯</span><br></pre></td></tr></table></figure><p>如果出现下面这个提示，说明3000端口被占用，找到这个运行的程序关掉就ok<br><img src="https://img-blog.csdnimg.cn/20190220143532247.png" alt="报错图片"><br>然后重新运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure><p>出现这个，我们的项目就顺利建成了<br><img src="https://img-blog.csdnimg.cn/20190220143822771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzQwMjU3Nzg3,size_16,color_FFFFFF,t_70" alt="react demo">🙈🙈🙈~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新年伊始，领导说后面相面考虑用react开发，最近看了react的文档。真心话，觉得好复杂。个人想法ps: 也可能是因为之前用的vue，一时半会转不过来的原因 。希望不会有人打我😂&lt;/p&gt;
&lt;hr&gt;
&lt;h6 id=&quot;话不多说-我们先来感受下&quot;&gt;&lt;a class=&quot;head
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>markdowm表情包</title>
    <link href="http://yoursite.com/2019/02/20/markdowm%E8%A1%A8%E6%83%85%E5%8C%85/"/>
    <id>http://yoursite.com/2019/02/20/markdowm表情包/</id>
    <published>2019-02-20T02:32:19.000Z</published>
    <updated>2019-03-21T03:40:08.007Z</updated>
    
    <content type="html"><![CDATA[<p>markdown可以添加表情了😂</p><hr><p>更多表情戳这里：<a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">https://www.webpagefx.com/tools/emoji-cheat-sheet/</a><br><img src="https://img-blog.csdnimg.cn/20190220150403842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzQwMjU3Nzg3,size_16,color_FFFFFF,t_70" alt="emoij图片库"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;markdown可以添加表情了😂&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;更多表情戳这里：&lt;a href=&quot;https://www.webpagefx.com/tools/emoji-cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:/
      
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>node创建一个服务</title>
    <link href="http://yoursite.com/2019/02/11/node%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2019/02/11/node创建一个服务/</id>
    <published>2019-02-11T08:04:11.000Z</published>
    <updated>2019-03-21T08:06:09.689Z</updated>
    
    <content type="html"><![CDATA[<h6 id="node创建一个服务"><a class="header-anchor" href="#node创建一个服务">¶</a>node创建一个服务</h6><p>在创建服务之前，要先安装node以及npm包管理（现在的node都带有默认的npm包管理）</p><p><strong>通过这个demo演示创建服务的过程</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//http.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="comment">//创建一个服务</span></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>)</span>&#123;</span><br><span class="line"><span class="comment">//request 请求体</span></span><br><span class="line"><span class="comment">//response 响应体</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//writeHead 设置请求头</span></span><br><span class="line">response.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html; charset = utf-8'</span>&#125;)</span><br><span class="line"><span class="comment">//默认一般会有2次访问。即页面选项卡前的图标，一般建议过滤掉</span></span><br><span class="line"><span class="keyword">if</span>(request.url !== <span class="string">'/favicon.ico'</span>)&#123;  </span><br><span class="line"><span class="comment">//在控制台打印</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line"><span class="comment">//网页打印</span></span><br><span class="line">response.write(<span class="string">'hello world'</span>);</span><br><span class="line"><span class="comment">//控制台打印出请求体</span></span><br><span class="line"><span class="built_in">console</span>.log(request);</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求完成之后，要结束响应</span></span><br><span class="line">response.end(<span class="string">'你好，世界'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;).listen(<span class="number">8000</span>);  <span class="comment">//listen 监听本地8000端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提示监听的端口号</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Server runningat http://127.0.0.1:8000'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;node创建一个服务&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#node创建一个服务&quot;&gt;¶&lt;/a&gt;node创建一个服务&lt;/h6&gt;
&lt;p&gt;在创建服务之前，要先安装node以及npm包管理（现在的node都带有默认的npm包管理）&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>加入购物车动画-基于fly.js插件</title>
    <link href="http://yoursite.com/2019/01/14/%E5%8A%A0%E5%85%A5%E8%B4%AD%E7%89%A9%E8%BD%A6%E5%8A%A8%E7%94%BB-%E5%9F%BA%E4%BA%8Efly-js%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/01/14/加入购物车动画-基于fly-js插件/</id>
    <published>2019-01-14T08:30:57.000Z</published>
    <updated>2019-03-21T08:31:39.200Z</updated>
    
    <content type="html"><![CDATA[<p>购物车飞入动画基于jquery的 fly.js插件,只需设置起点和终点的坐标即可，抛物线由fly.js来完成</p><p>资源下载地址：[<a href="https://github.com/amibug/fly" target="_blank" rel="noopener">https://github.com/amibug/fly</a>]<a href="https://github.com/amibug/fly" target="_blank" rel="noopener">https://github.com/amibug/fly</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>飞入动画<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        .test&#123;background: red;width: 50px;height:50px;&#125;</span></span><br><span class="line"><span class="undefined">.box &#123;</span></span><br><span class="line"><span class="undefined">width: 100%;</span></span><br><span class="line"><span class="undefined">height: 1000px;</span></span><br><span class="line"><span class="undefined">background: #eee;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>飞入插件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"fly.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 飞到的终点的坐标</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> globalLeft = $(<span class="string">'.box'</span>).offset().left;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> globalTop = $(<span class="string">'.box'</span>).offset().top - $(<span class="built_in">document</span>).scrollTop() + <span class="number">1000</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//绑定点击事件</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">'.box'</span>).on(<span class="string">'click'</span>, fly);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 飞入执行 --&gt;</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">fly</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="number">10</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> flyer = $(<span class="string">'&lt;div class="test"&gt;&lt;/div&gt;'</span>);</span></span><br><span class="line"><span class="undefined">flyer.fly(&#123;</span></span><br><span class="line"><span class="undefined">start: &#123;</span></span><br><span class="line"><span class="undefined">left: event.pageX, </span></span><br><span class="line"><span class="javascript">top: event.pageY-$(<span class="built_in">document</span>).scrollTop()</span></span><br><span class="line"><span class="undefined">&#125;,</span></span><br><span class="line"><span class="undefined">end: &#123;</span></span><br><span class="line"><span class="undefined">top: globalTop, </span></span><br><span class="line"><span class="undefined">left: globalLeft, </span></span><br><span class="line"><span class="undefined">width: 0, </span></span><br><span class="line"><span class="undefined">height: 0,</span></span><br><span class="line"><span class="undefined">&#125;,</span></span><br><span class="line"><span class="javascript">onEnd: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">this</span>.destroy();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;)</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;购物车飞入动画基于jquery的 fly.js插件,只需设置起点和终点的坐标即可，抛物线由fly.js来完成&lt;/p&gt;
&lt;p&gt;资源下载地址：[&lt;a href=&quot;https://github.com/amibug/fly&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>jQuery.range双滑块范围选择</title>
    <link href="http://yoursite.com/2019/01/14/jQuery-range%E5%8F%8C%E6%BB%91%E5%9D%97%E8%8C%83%E5%9B%B4%E9%80%89%E6%8B%A9/"/>
    <id>http://yoursite.com/2019/01/14/jQuery-range双滑块范围选择/</id>
    <published>2019-01-14T08:22:28.000Z</published>
    <updated>2019-03-21T08:23:18.716Z</updated>
    
    <content type="html"><![CDATA[<p>基于jquery的双滑块范围选择插件jquery.range.js</p><p>效果（颜色默认为绿色，这里我改了本地的css文件）：<br><img src="https://img-blog.csdnimg.cn/20190321161808933.png" alt="在这里插入图片描述"></p><hr><p>1.首先载入jquery以及range插件相关文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"range.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"range.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.然后在需要展示滑块的地方放入下面代码（这里设置默认范围值为 0,80 ）：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"0, 80"</span> <span class="attr">id</span>=<span class="string">"range"</span>  <span class="attr">class</span>=<span class="string">"slider-input"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>3.在js中写入下面部分：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> $(<span class="string">'.slider-input'</span>).jRange(&#123;</span><br><span class="line">        <span class="keyword">from</span>: <span class="number">0</span>,   <span class="comment">//滑块范围的初始值</span></span><br><span class="line">        to: <span class="number">80</span>,    <span class="comment">//滑块范围的终止值</span></span><br><span class="line">        step: <span class="number">1</span>,   <span class="comment">//设置步长</span></span><br><span class="line">        scale: [<span class="number">0</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">60</span>,<span class="number">80</span>], <span class="comment">//滑动条下方的尺度变标签</span></span><br><span class="line">        format: <span class="string">'%s'</span>,  <span class="comment">//数值格式</span></span><br><span class="line">        width: <span class="number">300</span>, <span class="comment">//进度条的宽度</span></span><br><span class="line">        showLabels: <span class="literal">true</span>,  <span class="comment">//是否显示滑动条下方的尺寸标签</span></span><br><span class="line">        showScale: <span class="literal">false</span>,  <span class="comment">//是否显示滑块上方的数值标签</span></span><br><span class="line">        isRange: <span class="literal">true</span>,     <span class="comment">//是否为选取范围</span></span><br><span class="line">        onstatechange: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;    <span class="comment">//滑块范围改变时触发的方法</span></span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.slider-input'</span>).jRange(<span class="string">'setValue'</span>, <span class="string">'25, 50'</span>);  <span class="comment">//滑块赋值</span></span><br></pre></td></tr></table></figure><p>上面的设置在文档中也有详细的描述，基本都可以满足我们的需求<br>jquery.range文档参考：<a href="https://github.com/nitinhayaran/jRange" target="_blank" rel="noopener">https://github.com/nitinhayaran/jRange</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基于jquery的双滑块范围选择插件jquery.range.js&lt;/p&gt;
&lt;p&gt;效果（颜色默认为绿色，这里我改了本地的css文件）：&lt;br&gt;
&lt;img src=&quot;https://img-blog.csdnimg.cn/20190321161808933.png&quot; alt=
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
</feed>
